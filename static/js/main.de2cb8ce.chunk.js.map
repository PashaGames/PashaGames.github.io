{"version":3,"sources":["components/SwitchB.js","components/Header.js","components/Server.js","components/Servers.js","components/Filter.js","components/About.js","components/Footer.js","components/AboutServer.js","App.js","reportWebVitals.js","index.js"],"names":["SwitchB","theme","onClick","text","className","Header","online","btnClass","to","Server","server","url","name","pl","Servers","servers","map","defaultProps","Filter","onChangeName","highest","onChangeHighest","type","value","placeholder","onChange","e","target","checked","currentTarget","About","Footer","AboutServer","id","useParams","find","App","useState","setServers","players","setPlayers","setTheme","themeB","setThemeB","filterName","setFilterName","filterHighest","setFilterHighest","fetchServers","a","fetch","res","json","data","useEffect","update","result","totalPlayersOnline","interval","setInterval","clearInterval","document","body","classList","path","exact","filter","toLowerCase","includes","sort","b","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","forEach","i","push","randomColor","Math","floor","random","getBar","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.de2cb8ce.chunk.js","sourcesContent":["\r\nfunction SwitchB({theme,onClick,text}) {\r\n    const className = \"btn \" + theme\r\n    return (\r\n        <div>\r\n            <button className={className} onClick={onClick}>{text}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SwitchB\r\n","import {Link} from 'react-router-dom'\r\nimport SwitchB from './SwitchB'\r\n\r\nfunction Header({theme , online, onClick}) {\r\n    const className = \"header \" + theme\r\n    const btnClass = \"btn \" + theme\r\n    return (\r\n        <div className=\"container light\">\r\n        <header className={className}>\r\n                <h1>\r\n                    Mope Server Tracker\r\n                </h1>\r\n\r\n                <h3>Currently online: {online}</h3>\r\n                <ul>\r\n                    <li className={btnClass}>\r\n                        <Link to=\"/\">Home</Link>\r\n                    </li>\r\n                    <li className={btnClass}>\r\n                        <Link to=\"/graphs\">Graphs</Link>\r\n                     </li>\r\n                    <li className={btnClass}>\r\n                        <Link to=\"/about\">About</Link>\r\n                    </li>\r\n                </ul>\r\n                <SwitchB text=\"Switch the theme!\" theme={theme} onClick={onClick}/>\r\n        </header>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import { FaAngleUp} from \"react-icons/fa\"\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Server({theme,server}) {\r\n    const className = \"serverContainer \" + theme\r\n    const url = \"/server/\" + server.name;\r\n    return (\r\n        <li className=\"serverLi\">\r\n        <div className={className}>\r\n            <h3>{server.name}</h3>\r\n            <p>{server.pl}</p>\r\n            <Link to={url}><FaAngleUp/></Link>\r\n        </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Server\r\n","import Server from \"./Server\";\r\n\r\nfunction Servers({theme,servers}) {\r\n    return (\r\n        <div>\r\n        <ul>\r\n            {servers.map((server) => (\r\n                <Server key={server.name} theme={theme} server={server}/>\r\n            ))}\r\n        </ul>\r\n        </div>\r\n    )\r\n            \r\n}\r\nServers.defaultProps = {\r\n    servers: []\r\n}\r\nexport default Servers\r\n","\r\n\r\nfunction Filter({theme,name,onChangeName,highest,onChangeHighest}) {\r\n\r\n    const className = \"filterBox \" + theme\r\n    return (\r\n        <div>\r\n            <h2>Filter settings:</h2>\r\n            <div className={className}>\r\n            <h3>By name: </h3>\r\n            <input type=\"text\" value={name} placeholder=\"Filter by name\" onChange={(e)=>{onChangeName(e.target.value)}}></input>\r\n            <h3>From Lowest To Highest</h3>\r\n            <input type=\"checkbox\" checked={highest} onChange={(e) => {\r\n                onChangeHighest(e.currentTarget.checked)\r\n            }}></input>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter\r\n","import React from 'react'\r\n\r\nfunction About({theme}) {\r\n    const className = \"aboutContainer \" + theme\r\n    return (\r\n        <div className={className}>\r\n            <h2>This simple website shows data about mope.io servers in real time!</h2>\r\n            <h3>May help to see not popular servers or see if developer hides somewhere!</h3>\r\n            <h5>Copyright PashaGames&copy; 2021</h5>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import React from 'react'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <h4>Copyright PashaGames&copy; 2021 </h4>\r\n        </footer>\r\n    )\r\n}\r\nexport default Footer\r\n","import { useParams, Link } from \"react-router-dom\" \r\n\r\nfunction AboutServer({servers}) {\r\n    let { id } = useParams();\r\n    let server;\r\n    if(servers){\r\n    server = servers.find(function(server) {\r\n        return server.name === id;\r\n    })\r\n    } else {\r\n        server = null;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        {server ? (\r\n            <>\r\n            <h3>Ip: {server.name}</h3>\r\n            <h3>Players: {server.pl}</h3>\r\n            </>\r\n        )\r\n        : (\"No server found!\")}\r\n\r\n        <Link to=\"/\">Go back!</Link>\r\n        \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default AboutServer\r\n","import { Bar } from 'react-chartjs-2';\nimport Header from \"./components/Header\"\nimport Servers from \"./components/Servers\"\nimport { useState, useEffect} from \"react\";\nimport Filter from \"./components/Filter\";\nimport {BrowserRouter, Route} from \"react-router-dom\";\nimport About from \"./components/About\";\nimport Footer from \"./components/Footer\";\nimport AboutServer from './components/AboutServer';\nfunction App() {\n  const [servers,setServers] = useState([]);\n  const [players,setPlayers] = useState(0);\n\n  const [theme,setTheme] = useState(\"light\");\n  const [themeB,setThemeB] = useState(false);\n  const [filterName,setFilterName] = useState(\"\");\n  const [filterHighest,setFilterHighest] = useState(true);\n  const fetchServers = async () => {\n    const res = await fetch(\"https://mope-masterserver-do.mope.io/serverPlayerCounts\");\n    const data = await res.json();\n\n    return data;\n  }\n\n  function updateTheme () {\n    setThemeB(!themeB);\n    let theme = themeB ? \"light\" : \"dark\";\n    document.body.classList = theme;\n    setTheme(theme)\n  }\n\n  useEffect(() => {\n    \n    async function update(){\n      const result = await fetchServers()\n      setServers(result.servers);\n      setPlayers(result.totalPlayersOnline);\n\n    }\n    \n    update();\n    const interval=setInterval(()=>{\n      update()\n    },10000)\n\n    return()=>clearInterval(interval)\n\n  },[])\n\n  function getBar(){\n    let data = {labels:[],datasets:[{label: \"Mope.io Server Online Graph.\",\n    backgroundColor: [],\n    borderColor: [],\n    borderWidth: 1,\n    hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n    hoverBorderColor: 'rgba(255,99,132,1)',\n    data:[]}]}\n    servers.forEach((server,i) => {data.labels[i] = server.name\n      data.datasets[0].data.push(server.pl)\n      const randomColor = `${Math.floor(Math.random() * 255)},${Math.floor(Math.random() * 255)},${Math.floor(Math.random() * 255)}`\n      data.datasets[0].backgroundColor.push(`rgba(${randomColor},0.2)`)\n      data.datasets[0].borderColor.push(`rgba(${randomColor},1)`)\n    })\n    return data;\n  }\n\n  return (\n    <BrowserRouter>\n    <div>\n      <Header theme={theme} online={players} onClick={updateTheme}/>\n      <Route path=\"/\" exact>\n      <Filter name={filterName} onChangeName={setFilterName} highest={filterHighest} onChangeHighest={setFilterHighest}/>\n      <Servers theme={theme} servers={servers.filter((server) => {\n        if(filterName === \"\"){\n          return true;\n        }\n        const name = server.name\n        const isFiltered = name.toLowerCase().includes(filterName.toLowerCase())\n        if(isFiltered){\n          return true;\n        } else {\n          return false;\n        }\n        \n      }).sort(function(a, b) {\n        if(filterHighest){\n        return b.pl - a.pl;\n        } else {\n        return a.pl - b.pl \n        }\n      })}/>\n      \n      </Route>\n      <Route path=\"/about\">\n      <About theme={theme} />\n      </Route>\n      <Route path=\"/graphs\">\n        <Bar data={getBar()}>\n\n        </Bar>\n      </Route>\n      <Route path=\"/server/:id\">\n        <AboutServer servers={servers} theme={theme}/>\n      </Route>\n      <Footer/>\n      </div>\n     </BrowserRouter>\n\n     \n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}